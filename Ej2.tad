a)
representación:
	polinomio se representa con estr, donde
		estr es tupla⟨
			grado: nat U {0}
			coef: array [0,...,n] nat
			⟩

invariante de representación:
	Rep: estr → bool
	(∀e: estr) Rep(e) ≡ true ⇔ tam(e.coef) >= e.grado + 1 ∧L e.coef[e.grado] != 0 ∧ (∀i:nat)(e.grado < i < tam(e.coef) ⟹L e.elem[i] = 0)

[1,2,3] tam = 3 y grado 2 
[1,2,0,0] tam = 4 y grado 1 

función de abstracción:
	Abs: estr e → polinomio { Rep(e) }
	abs(e) ≡ construirPolinomio(e,0)


construirPolinomio(s,i) ≡ if i = s.grado then
							cte(s.elem[i])
						else
							cte(s.elem[i]) + X * construirPolinomio(s,i+1)
						fi

